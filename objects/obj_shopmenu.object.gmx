<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lotem.lotem_state = state_shopping;
//menu options added to an array called menu
draw_set_font(font_shop);

wannabuy[0]=scr_reverse("כן");
wannabuy[1]=scr_reverse("לא");
caption= scr_reverse("תרצי לקנות חולצה זו?");
//menu cursor position
mpos=0;

//distance between each menu option
space=32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var move = 0; //temp variable for moving between the cursor bwtween menu options

//making the cursor move to the option above if up key is pressed
//on the keyboard or on the D-pad.
move-= max(gamepad_button_check_pressed(0,gp_padu),keyboard_check_pressed(vk_up),0);

move+=max (gamepad_button_check_pressed(0,gp_padd),keyboard_check_pressed(vk_down),0);

if (move != 0)
{
mpos+=move; //move the cursor position up or down based of key strokes.

if (mpos &lt; 0) mpos=array_length_1d(wannabuy)-1;
if (mpos &gt; array_length_1d(wannabuy)-1) mpos=0;
}

//pushing enter or X to select a menu option
var push = max (gamepad_button_check_pressed(0,gp_face1),keyboard_check_pressed(vk_enter),0);
if (push==1) scr_menu(); //calling the script for choosing what to do based on choice.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_right);
draw_set_valign(fa_middle);
draw_set_font(font_menu);
draw_set_color(c_black);

var m;

//A for loop that will draw the array, thus displaying the menu
for( m = 0; m &lt; array_length_1d(wannabuy);m+=1)
{
draw_text(x-space,y+(m*space),string(wannabuy[m]));

}

draw_sprite(sprite_index,0,x-16,y+mpos*space);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text_colour(x-25,y-50,caption,c_white,c_white,c_white,c_white,1);
//draw_text_colour(x-100,y-120,caption2,c_blue,c_purple,c_green,c_red,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
